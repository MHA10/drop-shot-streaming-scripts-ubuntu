name: "publish to npm"
on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: node
        uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: bump version
        run: |
          npm version patch -m "Bump version to %s [skip ci]"
          git push --follow-tags

      - name: build
        run: npm install && npm run build

      - name: publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}

      - name: notify server
        run: |
          # Get the new version from package.json
          NEW_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          
          # Notify server about successful deployment
          curl -X POST "${{ secrets.DEPLOYMENT_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "event": "package_published",
              "package_name": "'$PACKAGE_NAME'",
              "version": "'$NEW_VERSION'",
              "repository": "${{ github.repository }}",
              "commit_sha": "${{ github.sha }}",
              "branch": "${{ github.ref_name }}",
              "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
              "actor": "${{ github.actor }}"
            }' || echo "Failed to notify server, but deployment was successful"
